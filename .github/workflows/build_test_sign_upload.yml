name: Build, Test, Sign, and Upload packet-sentry

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        architecture: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.24

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: $GOPATH/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Set up Go environment variables
        run: |
          echo "GOARCH=${{ matrix.architecture }}" >> $GITHUB_ENV
          echo "GOOS=${{ matrix.os }}" >> $GITHUB_ENV

      - name: Build Go Binary for ${{ matrix.os }} ${{ matrix.architecture }}
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            OS_NAME="linux"
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            OS_NAME="darwin"
          else
            OS_NAME="windows"  # For windows-latest, keep it as is
          fi

          echo "OS_NAME=${OS_NAME}"

          if [[ "${OS_NAME}" == "windows" ]]; then
            # Run Windows-specific build script
            pwsh ./scripts/build.ps1 windows ${{ matrix.architecture }}
          else
            # Run Unix-specific build script
            ./scripts/build ${OS_NAME} ${{ matrix.architecture }}
          fi
