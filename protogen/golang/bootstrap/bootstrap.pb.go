// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: bootstrap/bootstrap.proto

package bootstrap

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CertificateRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Csr                     string                 `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
	IsRenewal               bool                   `protobuf:"varint,2,opt,name=isRenewal,proto3" json:"isRenewal,omitempty"`
	InstallKey              string                 `protobuf:"bytes,3,opt,name=installKey,proto3" json:"installKey,omitempty"`
	ExistingCertFingerprint string                 `protobuf:"bytes,4,opt,name=existingCertFingerprint,proto3" json:"existingCertFingerprint,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CertificateRequest) Reset() {
	*x = CertificateRequest{}
	mi := &file_bootstrap_bootstrap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateRequest) ProtoMessage() {}

func (x *CertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_bootstrap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateRequest.ProtoReflect.Descriptor instead.
func (*CertificateRequest) Descriptor() ([]byte, []int) {
	return file_bootstrap_bootstrap_proto_rawDescGZIP(), []int{0}
}

func (x *CertificateRequest) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

func (x *CertificateRequest) GetIsRenewal() bool {
	if x != nil {
		return x.IsRenewal
	}
	return false
}

func (x *CertificateRequest) GetInstallKey() string {
	if x != nil {
		return x.InstallKey
	}
	return ""
}

func (x *CertificateRequest) GetExistingCertFingerprint() string {
	if x != nil {
		return x.ExistingCertFingerprint
	}
	return ""
}

type CertificateResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ClientCertificate     string                 `protobuf:"bytes,1,opt,name=clientCertificate,proto3" json:"clientCertificate,omitempty"`
	CaCertificate         string                 `protobuf:"bytes,2,opt,name=caCertificate,proto3" json:"caCertificate,omitempty"`
	ClientCertFingerprint string                 `protobuf:"bytes,3,opt,name=clientCertFingerprint,proto3" json:"clientCertFingerprint,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CertificateResponse) Reset() {
	*x = CertificateResponse{}
	mi := &file_bootstrap_bootstrap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateResponse) ProtoMessage() {}

func (x *CertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_bootstrap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateResponse.ProtoReflect.Descriptor instead.
func (*CertificateResponse) Descriptor() ([]byte, []int) {
	return file_bootstrap_bootstrap_proto_rawDescGZIP(), []int{1}
}

func (x *CertificateResponse) GetClientCertificate() string {
	if x != nil {
		return x.ClientCertificate
	}
	return ""
}

func (x *CertificateResponse) GetCaCertificate() string {
	if x != nil {
		return x.CaCertificate
	}
	return ""
}

func (x *CertificateResponse) GetClientCertFingerprint() string {
	if x != nil {
		return x.ClientCertFingerprint
	}
	return ""
}

var File_bootstrap_bootstrap_proto protoreflect.FileDescriptor

const file_bootstrap_bootstrap_proto_rawDesc = "" +
	"\n" +
	"\x19bootstrap/bootstrap.proto\x12\tbootstrap\"\x9e\x01\n" +
	"\x12CertificateRequest\x12\x10\n" +
	"\x03csr\x18\x01 \x01(\tR\x03csr\x12\x1c\n" +
	"\tisRenewal\x18\x02 \x01(\bR\tisRenewal\x12\x1e\n" +
	"\n" +
	"installKey\x18\x03 \x01(\tR\n" +
	"installKey\x128\n" +
	"\x17existingCertFingerprint\x18\x04 \x01(\tR\x17existingCertFingerprint\"\x9f\x01\n" +
	"\x13CertificateResponse\x12,\n" +
	"\x11clientCertificate\x18\x01 \x01(\tR\x11clientCertificate\x12$\n" +
	"\rcaCertificate\x18\x02 \x01(\tR\rcaCertificate\x124\n" +
	"\x15clientCertFingerprint\x18\x03 \x01(\tR\x15clientCertFingerprint2g\n" +
	"\x10BootstrapService\x12S\n" +
	"\x12RequestCertificate\x12\x1d.bootstrap.CertificateRequest\x1a\x1e.bootstrap.CertificateResponseBDZBgithub.com/danielhoward314/packet-sentry/protogen/golang/bootstrapb\x06proto3"

var (
	file_bootstrap_bootstrap_proto_rawDescOnce sync.Once
	file_bootstrap_bootstrap_proto_rawDescData []byte
)

func file_bootstrap_bootstrap_proto_rawDescGZIP() []byte {
	file_bootstrap_bootstrap_proto_rawDescOnce.Do(func() {
		file_bootstrap_bootstrap_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bootstrap_bootstrap_proto_rawDesc), len(file_bootstrap_bootstrap_proto_rawDesc)))
	})
	return file_bootstrap_bootstrap_proto_rawDescData
}

var file_bootstrap_bootstrap_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_bootstrap_bootstrap_proto_goTypes = []any{
	(*CertificateRequest)(nil),  // 0: bootstrap.CertificateRequest
	(*CertificateResponse)(nil), // 1: bootstrap.CertificateResponse
}
var file_bootstrap_bootstrap_proto_depIdxs = []int32{
	0, // 0: bootstrap.BootstrapService.RequestCertificate:input_type -> bootstrap.CertificateRequest
	1, // 1: bootstrap.BootstrapService.RequestCertificate:output_type -> bootstrap.CertificateResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_bootstrap_bootstrap_proto_init() }
func file_bootstrap_bootstrap_proto_init() {
	if File_bootstrap_bootstrap_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bootstrap_bootstrap_proto_rawDesc), len(file_bootstrap_bootstrap_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bootstrap_bootstrap_proto_goTypes,
		DependencyIndexes: file_bootstrap_bootstrap_proto_depIdxs,
		MessageInfos:      file_bootstrap_bootstrap_proto_msgTypes,
	}.Build()
	File_bootstrap_bootstrap_proto = out.File
	file_bootstrap_bootstrap_proto_goTypes = nil
	file_bootstrap_bootstrap_proto_depIdxs = nil
}
